% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ComputeCarboneRA.R
\name{ComputeCarboneRA}
\alias{ComputeCarboneRA}
\title{Compute Carbone Relative Adaptiveness}
\usage{
ComputeCarboneRA(target = 0.05, initfrac = 1, iterfrac = 0.5,
  reverse = FALSE, DB = mylist(whatout = 1))
}
\arguments{
\item{target}{nonnegative}

\item{initfrac}{nonnegative}

\item{reverse}{For standard anything else for non-standard}

\item{DB}{Database with working genes of type Entires()}

\item{interfrac}{nonnegative}
}
\value{
Named (codons) numerical vector with relative synonymous codon usage for the 64 codons
}
\description{
\code{ComputeCarboneRA} calculates RA
}
\details{
Should compute the same RA in Darwin
}
\section{Original code in Darwin}{

\subsection{Compute Carbone Relative Adaptiveness}{\preformatted{
ComputeCarboneRA := proc( ; t=0.01:nonnegative, initfrac=1:nonnegative, iterfrac=0.5:nonnegative, mode:string)
 global RA;
 if not assigned(DB) then error('DB must be assigned') fi;
 x := 1;  # fraction of the sequences used to compute RA in this iteration
 AllGenes := [seq(i, i=1..DB[TotEntries])]:
 genes := Shuffle(AllGenes)[1..round(initfrac * DB[TotEntries])]:
 bestCorr := 0;
 cai := CreateArray(1..DB[TotEntries]):
 while length(genes) / DB[TotEntries] > t do
   RA := RelativeAdaptiveness(genes);
   for i to DB[TotEntries] do
     dna:=SearchTag('DNA',Entry(i));
     if SearchString('X', dna)<>-1 then next fi;
     cai[i] := ComputeCAI(dna) od;
   x := x * iterfrac;
   res := transpose([AllGenes, cai]):
   if mode='reverse' then
     res := transpose(sort(res, res -> res[2])):
   else
     res := transpose(sort(res, res -> -res[2])):
   fi;
   genes := res[1][1..round(x * DB[TotEntries])]:
 od;
RA
end: } }
}
\examples{
ComputeCarboneRA(DB=mylist(whatout=1))

}
\author{
Roth, A.; Friberg, M.; Siegrist, F. and Cannarozzi, G. M. \email{gina@cannarozzi.com}
}
\seealso{
\code{\link{RelativeAdaptiveness}} \code{\link{statanacoseq}} \code{\link{SetupRA}}  \code{\link{Entries}}
}
\keyword{CodonBias}

