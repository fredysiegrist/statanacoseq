% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NucleotideContent.R
\name{NucleotideContent}
\alias{NucleotideContent}
\title{Nucleotide Content}
\usage{
NucleotideContent(tD = mylist(whatout = 1), pos = c(1, 2, 3))
}
\arguments{
\item{pos}{List of 3 positive integers for the nucleotide positions}

\item{td}{Dictionary of String and Entry # nope probably either string or Entry type}
}
\value{
Vector of four fractions (for every base) of nucleotide content in all bases
}
\description{
\code{NucleotideContent} Computes for a gene or a database entry the content of nucleotides
}
\details{
Should compute the same CP as in Darwin
}
\section{Original code in Darwin}{

\subsection{Compute Nucleotide content.  AR (2006)}{\preformatted{
NucleotideContent := proc( ; tD:{string, Entry}, pos=[1,2,3]:list(posint)) -> list;
 o := CreateArray(1..4);
 n:=0;
 if not assigned(tD) then
   for z to DB[TotEntries] do
     d:=SearchTag(DNA, Entry(z));
     for i1 to length(d)-max(pos) by 3 do for i2 in pos do
       i:=i1+i2;
       n:=n+1;
       o[BToInt(d[i])] := o[BToInt(d[i])]+1
     od od;
   od;
 else
   if type(tD, Entry) then d:=SearchTag('DNA', tD)
     else d:=tD fi;
   for i1 to length(d)-max(pos) by 3 do for i2 in pos do
     i:=i1+i2;
     n:=n+1;
     o[BToInt(d[i])] := o[BToInt(d[i])]+1
   od od;
 fi;
 return(o/n);
end: } }
}
\examples{
NucleotideContent('ATGTGGTACTCCGACTACGGAGGATAA', pos=c(1,2))
NucleotideContent(list("ABCDEFG", "ACGGCCGACGGTGT"), pos=3)
NucleotideContent(toupper(c2s(mylist(whatout=1)[[1]])))
NucleotideContent(pos=c(3))

}
\author{
Roth, A.; Friberg, M.; Siegrist, F. and Cannarozzi, G. M. \email{gina@cannarozzi.com}
}
\seealso{
\code{\link{seqinr}} \code{\link{statanacoseq}} \code{\link{readstats}}
}
\keyword{CodonBias}

