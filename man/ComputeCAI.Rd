% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ComputeCAI.R
\name{ComputeCAI}
\alias{ComputeCAI}
\title{Codon Adaptation Index}
\usage{
ComputeCAI(cds, RA, UseCodonProb = FALSE)
}
\arguments{
\item{cds}{Coding sequence in reading frame}

\item{RA}{Relative Adaptiveness table to use}

\item{UseCodonProb}{Wheter to use Codon Probabilities (default = FALSE)}
}
\value{
Numerical with CAI
}
\description{
\code{ComputeCAI} Computes Codon Adaptation Index
}
\details{
Should compute the same ComputeCAI or ComputeCAIVector as in Darwin and the cai of seqinr package.
}
\section{Original code in Darwin}{

\subsection{Compute CAI, the Codon Adaptation Index (Sharp and Li 1987)}{\preformatted{
# Markus Friberg and Alexander Roth (Dec 2005)
ComputeCAI := proc(DNA:{string, Entry})
 # check global variables and scan arguments
 if not assigned(RA) then
   error('Error in ComputeCAI: RA not assigned, use e.g. SetupRA(yeast);') fi;
 if type(DNA, Entry) then dna:=copy(SearchTag('DNA', DNA))
 else dna:=DNA fi;
 UseCodonProb := false;
 for i from 2 to nargs do
   if length(args[i]) = 2 and args[i, 1] = 'UseCodonProb' then
     UseCodonProb := args[i, 2]
   else
     error('Unknown argument ', args[i]);
   fi;
 od;
 # compute cai
 w := 0;
 n := length(dna)/3;
 for j to length(dna) by 3 do
   cint := CodonToCInt(dna[j..j+2]);
   codprob := If(UseCodonProb, CodonProb[cint], 1);
   if CIntToA(cint) <> '$' then    # don't consider stop codons
   w := w + ln(codprob * RA[cint]) fi;
 od;
 exp(1/n * w)
end: } }
}
\examples{
ComputeCAI('ATGTGGTACTCCGACTACGGAGGATAA', RA=SetupRA("yeast"), UseCodonProb=TRUE)
ComputeCAI(mylist(whatout=1)[[1]], RA=ComputeCarboneRA(DB=mylist(whatout=1)))

}
\author{
Roth, A.; Friberg, M.; Siegrist, F. and Cannarozzi, G. M. \email{gina@cannarozzi.com}
}
\seealso{
\code{\link{seqinr}} \code{\link[seqinr]{cai}} \code{\link{statanacoseq}} \code{\link{checkCDS}}
}
\keyword{CodonBias}

